@tailwind base;
@tailwind components;
@tailwind utilities;

/* ==========================================================================
   ESSENTIAL KEYFRAMES FOR ANIMATIONS
   ========================================================================== */

@keyframes glitch {
  0%,
  100% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
}

@keyframes glitch-intense {
  0%,
  100% {
    transform: translate(0) skew(0deg);
    filter: hue-rotate(0deg);
  }
  10% {
    transform: translate(-5px, 2px) skew(-2deg);
    filter: hue-rotate(90deg);
  }
  20% {
    transform: translate(-10px, -2px) skew(2deg);
    filter: hue-rotate(180deg);
  }
  30% {
    transform: translate(10px, 2px) skew(-1deg);
    filter: hue-rotate(270deg);
  }
  40% {
    transform: translate(5px, -2px) skew(1deg);
    filter: hue-rotate(360deg);
  }
  50% {
    transform: translate(-2px, 2px) skew(-3deg);
    filter: hue-rotate(45deg);
  }
  60% {
    transform: translate(2px, 5px) skew(2deg);
    filter: hue-rotate(135deg);
  }
  70% {
    transform: translate(-3px, -5px) skew(-1deg);
    filter: hue-rotate(225deg);
  }
  80% {
    transform: translate(3px, -2px) skew(1deg);
    filter: hue-rotate(315deg);
  }
  90% {
    transform: translate(-1px, 2px) skew(-2deg);
    filter: hue-rotate(180deg);
  }
}

@keyframes glitch-rgb {
  0%,
  100% {
    transform: translate(0);
    text-shadow:
      0 0 0 red,
      0 0 0 blue;
  }
  25% {
    transform: translate(-2px, 0);
    text-shadow:
      2px 0 0 red,
      -2px 0 0 blue;
  }
  50% {
    transform: translate(2px, 0);
    text-shadow:
      -2px 0 0 red,
      2px 0 0 blue;
  }
  75% {
    transform: translate(-1px, 0);
    text-shadow:
      1px 0 0 red,
      -1px 0 0 blue;
  }
}

@keyframes flicker {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

@keyframes flash {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

@keyframes float-chaotic {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(10px, -15px) rotate(90deg);
  }
  50% {
    transform: translate(-5px, -30px) rotate(180deg);
  }
  75% {
    transform: translate(-15px, -10px) rotate(270deg);
  }
  100% {
    transform: translate(0, 0) rotate(360deg);
  }
}

@keyframes loading-brutal {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes loading-jagged {
  0% {
    transform: scaleX(0);
    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
  }
  25% {
    clip-path: polygon(0 0, 30% 0, 25% 100%, 0 100%);
  }
  50% {
    clip-path: polygon(0 0, 60% 0, 55% 100%, 0 100%);
  }
  75% {
    clip-path: polygon(0 0, 90% 0, 85% 100%, 0 100%);
  }
  100% {
    transform: scaleX(1);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes typing {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

@keyframes cursor-blink {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0;
  }
}

@layer base {
  /* Respect user motion preferences */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* Base typography with design tokens */
  html {
    font-family: var(--font-body);
    scroll-behavior: smooth;
    color: var(--color-text-primary);
    /* REMOVED position: relative to fix fixed positioning */
    height: 100%;
    /* MOBILE FIX: Prevent horizontal scrolling */
    overflow-x: hidden;
    max-width: 100vw;
  }

  /* Ensure body has proper layout without blocking backgrounds */
  body {
    color: var(--color-text-primary);
    min-height: 100vh;
    /* Reset any margins/padding that might interfere with fixed positioning */
    margin: 0 !important;
    padding: 0 !important;
    /* MOBILE FIX: Critical containment and touch properties */
    overflow-x: hidden;
    max-width: 100vw;
    width: 100%;
    /* Improve touch scrolling on mobile */
    -webkit-overflow-scrolling: touch;
    /* Prevent text scaling on orientation change */
    -webkit-text-size-adjust: 100%;
    /* Improve touch responsiveness */
    touch-action: manipulation;
  }

  /* Brutalist heading styles */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-heading);
    font-weight: 800;
    line-height: 0.9;
    letter-spacing: -0.025em;
  }

  /* High contrast focus states */
  *:focus-visible {
    outline: 2px solid var(--color-accent-primary);
    outline-offset: 2px;
  }

  /* Custom scrollbar with theme support */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: var(--color-bg-secondary);
  }

  ::-webkit-scrollbar-thumb {
    background: var(--color-accent-primary);
    border-radius: 4px;
  }

  /* Code elements styling */
  code {
    font-family: var(--font-mono);
    background-color: var(--color-bg-tertiary);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  /* Navigation specific fixes */
  nav {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  /* Force proper flex behavior for responsive layouts */
  .flex {
    display: flex !important;
  }

  .flex-col {
    flex-direction: column !important;
  }

  @media (min-width: 640px) {
    .sm\:flex-row {
      flex-direction: row !important;
    }

    .sm\:w-auto {
      width: auto !important;
    }
  }
}

@layer components {
  /* ==========================================================================
     BRUTALIST ANIMATION UTILITIES
     ========================================================================== */

  /* Glitch hover effects */
  .glitch-hover {
    position: relative;
  }

  .glitch-hover:hover {
    animation: glitch 0.3s ease-in-out;
  }

  /* RGB Split Text Effect */
  .glitch-rgb-text {
    position: relative;
    display: inline-block;
  }

  .glitch-rgb-text::before,
  .glitch-rgb-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    pointer-events: none;
  }

  .glitch-rgb-text::before {
    color: #b8869a; /* Darker dusty pink */
    animation: glitch-rgb 0.4s ease-in-out infinite;
    z-index: -1;
  }

  .glitch-rgb-text::after {
    color: #00d4ff; /* Electric blue/cyan */
    animation: glitch-rgb 0.4s ease-in-out infinite reverse;
    z-index: -2;
  }

  /* Glitch overlay effect */
  .glitch-overlay {
    position: relative;
    overflow: hidden;
  }

  .glitch-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(184, 134, 154, 0.1) 25%,
      rgba(0, 212, 255, 0.1) 50%,
      rgba(76, 205, 196, 0.1) 75%,
      transparent 100%
    );
    transform: translateX(-100%);
    transition: transform 0.3s ease;
    pointer-events: none;
  }

  .glitch-overlay:hover::before {
    transform: translateX(100%);
  }

  /* Motion blur on hover */
  .motion-blur-hover {
    transition: filter 0.3s ease;
  }

  .motion-blur-hover:hover {
    filter: blur(2px);
  }

  /* Motion blur with movement */
  .motion-blur-move {
    transition: all 0.3s ease;
  }

  .motion-blur-move:hover {
    filter: blur(2px);
    transform: translateX(5px);
  }

  /* Button ripple effect */
  .ripple-effect {
    position: relative;
    overflow: hidden;
  }

  .ripple-effect::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition:
      width 0.3s ease,
      height 0.3s ease;
    pointer-events: none;
  }

  .ripple-effect:active::before {
    width: 300px;
    height: 300px;
  }

  /* Brutalist button hover effect */
  .brutalist-button {
    position: relative;
    transition: all 0.3s ease;
  }

  .brutalist-button:hover {
    transform: translateY(-2px);
    box-shadow: 4px 4px 0 var(--color-accent-primary);
  }

  .brutalist-button:active {
    transform: translateY(0);
    box-shadow: 2px 2px 0 var(--color-accent-primary);
  }

  /* Industrial overlay effect */
  .industrial-overlay {
    position: relative;
  }

  .industrial-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      45deg,
      transparent,
      transparent 2px,
      rgba(255, 255, 255, 0.05) 2px,
      rgba(255, 255, 255, 0.05) 4px
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .industrial-overlay:hover::before {
    opacity: 1;
  }

  /* Brutal loading bar */
  .loading-brutal {
    position: relative;
    background: var(--color-bg-tertiary);
    height: 4px;
    overflow: hidden;
  }

  .loading-brutal::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background: var(--color-accent-primary);
    animation: loading-brutal 2s ease-out forwards;
  }

  /* Jagged progress bar */
  .progress-jagged {
    position: relative;
    background: var(--color-bg-tertiary);
    height: 6px;
    overflow: hidden;
  }

  .progress-jagged::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background: var(--color-accent-primary);
    animation: loading-jagged 3s ease-out forwards;
  }

  /* Typing effect */
  .typing-effect {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid var(--color-accent-primary);
    animation:
      typing 2s steps(40) forwards,
      cursor-blink 1s infinite;
  }

  /* Glitch text on hover */
  .text-glitch-hover {
    position: relative;
  }

  .text-glitch-hover:hover {
    animation: glitch-rgb 0.4s ease-in-out;
  }

  /* Floating particles */
  .particles-container {
    position: relative;
  }

  .particles-container .particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--color-accent-primary);
    border-radius: 50%;
    animation: float-chaotic 4s linear infinite;
  }

  .particles-container .particle:nth-child(1) {
    top: 10%;
    left: 10%;
    animation-delay: 0s;
  }

  .particles-container .particle:nth-child(2) {
    top: 20%;
    left: 80%;
    animation-delay: 0.5s;
  }

  .particles-container .particle:nth-child(3) {
    top: 60%;
    left: 30%;
    animation-delay: 1s;
  }

  .particles-container .particle:nth-child(4) {
    top: 80%;
    left: 70%;
    animation-delay: 1.5s;
  }

  .particles-container .particle:nth-child(5) {
    top: 40%;
    left: 90%;
    animation-delay: 2s;
  }

  /* Geometric particles */
  .particles-geometric .particle {
    border-radius: 0;
  }

  .particles-geometric .particle:nth-child(odd) {
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  }

  .particles-geometric .particle:nth-child(even) {
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  }

  /* Animation triggers */
  .animate-on-hover:hover {
    animation: glitch 0.3s ease-in-out;
  }

  .animate-on-click:active {
    animation: flash 0.1s ease-in-out;
  }

  /* Theme-specific animations - Light and Dark themes only */
  [data-theme='light'] .glitch-rgb-text::before {
    color: #b8869a; /* Darker dusty pink */
  }

  [data-theme='light'] .glitch-rgb-text::after {
    color: #00d4ff; /* Electric blue/cyan */
  }

  [data-theme='dark'] .glitch-rgb-text::before {
    color: #b8869a; /* Darker dusty pink */
  }

  [data-theme='dark'] .glitch-rgb-text::after {
    color: #00d4ff; /* Electric blue/cyan */
  }

  /* Enhanced dark theme brutalist effects */
  [data-theme='dark'] .brutalist-button:hover {
    box-shadow: 4px 4px 0 var(--color-brutalist-highlight);
  }

  [data-theme='dark'] .brutalist-button:active {
    box-shadow: 2px 2px 0 var(--color-brutalist-highlight);
  }

  /* Essential responsive utilities */
  .container-constrained {
    width: 100%;
    max-width: 90rem;
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--container-padding);
    padding-right: var(--container-padding);
    /* MOBILE FIX: Ensure proper containment */
    overflow-x: hidden;
    box-sizing: border-box;
  }

  .section-padding {
    padding-top: var(--section-spacing);
    padding-bottom: var(--section-spacing);
  }

  .element-gap {
    gap: var(--element-gap);
  }

  /* MOBILE FIX: Universal containment and overflow fixes */
  .content-wrapper {
    max-width: 100vw;
    overflow-x: hidden;
    box-sizing: border-box;
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--container-padding, 1rem);
    padding-right: var(--container-padding, 1rem);
  }

  /* Ensure all glass components respect boundaries */
  .glass-primary,
  .glass-secondary,
  .glass-tertiary,
  .glassmorphism-panel,
  .glassmorphism-content-panel {
    max-width: 100%;
    box-sizing: border-box;
    word-wrap: break-word;
    hyphens: auto;
    /* Remove overflow-x: hidden to prevent drop shadow cutoff */
    /* overflow-x: hidden; */
  }

  /* Prevent any element from creating horizontal overflow */
  * {
    box-sizing: border-box;
  }

  img,
  video,
  canvas,
  svg {
    max-width: 100%;
    height: auto;
  }

  /* Text containment for mobile */
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  span,
  div {
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }

  /* Responsive typography */
  .text-responsive {
    font-size: clamp(1rem, 2.5vw, 1.25rem);
    line-height: 1.4;
  }

  .heading-responsive {
    font-size: clamp(1.5rem, 5vw, 3rem);
    line-height: 0.9;
    letter-spacing: -0.025em;
  }

  .display-responsive {
    font-size: clamp(2rem, 8vw, 6rem);
    line-height: 0.8;
    letter-spacing: -0.05em;
  }

  /* Grid layouts */
  .grid-asymmetric {
    display: grid;
    gap: var(--element-gap);
    grid-template-columns: 1fr;
  }

  @media (min-width: 768px) {
    .grid-asymmetric {
      grid-template-columns: 1fr 1.618fr;
    }
  }

  @media (min-width: 1024px) {
    .grid-asymmetric {
      grid-template-columns: 1fr 1.618fr 1fr;
    }
  }

  @media (min-width: 1440px) {
    .grid-asymmetric {
      grid-template-columns: 0.8fr 1.2fr 1fr 1.4fr;
    }
  }

  .grid-print-style {
    display: grid;
    gap: var(--element-gap);
    grid-template-columns: 1fr;
  }

  @media (min-width: 768px) {
    .grid-print-style {
      grid-template-columns: repeat(12, 1fr);
    }

    .span-full {
      grid-column: 1 / -1;
    }
    .span-half {
      grid-column: span 6;
    }
    .span-third {
      grid-column: span 4;
    }
    .span-two-thirds {
      grid-column: span 8;
    }
    .span-quarter {
      grid-column: span 3;
    }
    .span-three-quarters {
      grid-column: span 9;
    }

    .offset-1 {
      grid-column-start: 2;
    }
    .offset-2 {
      grid-column-start: 3;
    }
    .offset-3 {
      grid-column-start: 4;
    }
  }

  /* Deliberate misalignment */
  .misalign-accessible {
    position: relative;
    z-index: 1;
  }

  .misalign-accessible:focus-within {
    z-index: 10;
    outline: 2px solid var(--color-accent-primary);
    outline-offset: 2px;
  }

  .misalign-left {
    transform: translateX(calc(-1 * var(--offset-small)));
  }

  .misalign-right {
    transform: translateX(var(--offset-small));
  }

  .misalign-up {
    transform: translateY(calc(-1 * var(--offset-small)));
  }

  .misalign-down {
    transform: translateY(var(--offset-small));
  }

  .misalign-diagonal {
    transform: translate(var(--offset-small), calc(-1 * var(--offset-small)));
  }

  .misalign-reverse-diagonal {
    transform: translate(calc(-1 * var(--offset-small)), var(--offset-small));
  }

  @media (min-width: 1024px) {
    .misalign-large-left {
      transform: translateX(calc(-1 * var(--offset-large)));
    }

    .misalign-large-right {
      transform: translateX(var(--offset-large));
    }

    .misalign-large-diagonal {
      transform: translate(
        var(--offset-large),
        calc(-1 * var(--offset-medium))
      );
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .misalign-chaos {
      animation: none;
    }

    .misalign-left,
    .misalign-right,
    .misalign-up,
    .misalign-down,
    .misalign-diagonal,
    .misalign-reverse-diagonal {
      transform: none;
    }

    /* Disable punk animations for accessibility */
    .glitch-hover:hover,
    .glitch-rgb-text::before,
    .glitch-rgb-text::after,
    .text-glitch-hover:hover,
    .animate-on-hover:hover,
    .animate-on-click:active,
    .particles-container .particle,
    .typing-effect,
    .loading-brutal::before,
    .progress-jagged::before {
      animation: none !important;
    }
  }

  /* ==========================================================================
     RESPONSIVE SPACING AND LAYOUT UTILITIES
     ========================================================================== */

  /* Gap utilities using our design tokens */
  .gap-xs {
    gap: var(--space-xs);
  }
  .gap-sm {
    gap: var(--space-sm);
  }
  .gap-md {
    gap: var(--space-md);
  }
  .gap-lg {
    gap: var(--space-lg);
  }
  .gap-xl {
    gap: var(--space-xl);
  }
  .gap-2xl {
    gap: var(--space-2xl);
  }
  .gap-3xl {
    gap: var(--space-3xl);
  }

  /* Padding utilities using our design tokens */
  .p-xs {
    padding: var(--space-xs);
  }
  .p-sm {
    padding: var(--space-sm);
  }
  .p-md {
    padding: var(--space-md);
  }
  .p-lg {
    padding: var(--space-lg);
  }
  .p-xl {
    padding: var(--space-xl);
  }
  .p-2xl {
    padding: var(--space-2xl);
  }
  .p-3xl {
    padding: var(--space-3xl);
  }

  /* Margin utilities using our design tokens */
  .m-xs {
    margin: var(--space-xs);
  }
  .m-sm {
    margin: var(--space-sm);
  }
  .m-md {
    margin: var(--space-md);
  }
  .m-lg {
    margin: var(--space-lg);
  }
  .m-xl {
    margin: var(--space-xl);
  }
  .m-2xl {
    margin: var(--space-2xl);
  }
  .m-3xl {
    margin: var(--space-3xl);
  }

  /* Content wrapper utility for consistent max-width */
  .content-wrapper {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--container-padding);
  }

  /* Section wrapper for consistent spacing */
  .section-wrapper {
    padding: var(--section-spacing) 0;
  }
}
