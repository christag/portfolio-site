---
export interface Props {
  service: {
    id: number;
    title: string;
    description: string;
    category?: string;
    featureHighlights?: string[];
    tiers?: Array<{
      name: string;
      priceLow?: number;
      priceHigh?: number;
      deliverables?: string[];
    }>;
    contactMethod?: string;
    isPinned?: boolean;
    slug: string;
  };
  index?: number;
}

const { service, index = 0 } = Astro.props;

// Determine pricing display
const getLowestPrice = () => {
  if (!service.tiers || service.tiers.length === 0) return null;
  const prices = service.tiers
    .filter((tier) => tier.priceLow)
    .map((tier) => tier.priceLow!);
  return prices.length > 0 ? Math.min(...prices) : null;
};

const getHighestPrice = () => {
  if (!service.tiers || service.tiers.length === 0) return null;
  const prices = service.tiers
    .filter((tier) => tier.priceHigh)
    .map((tier) => tier.priceHigh!);
  return prices.length > 0 ? Math.max(...prices) : null;
};

const lowestPrice = getLowestPrice();
const highestPrice = getHighestPrice();

// Punk-style misalignment based on index
const misalignmentClass =
  index % 3 === 0 ? 'misalign-left' : index % 3 === 1 ? 'misalign-right' : '';
---

<article
  class={`service-card glassmorphism-card ${misalignmentClass} ${service.isPinned ? 'pinned' : ''}`}
  role="article"
  aria-labelledby={`service-title-${service.id}`}
>
  {
    service.isPinned && (
      <div class="pin-indicator" aria-label="Featured service">
        <span class="pin-text">[ FEATURED ]</span>
      </div>
    )
  }

  <header class="service-header">
    <h3 id={`service-title-${service.id}`} class="service-title">
      {service.title}
    </h3>
    {
      service.category && (
        <span class="service-category">
          // {service.category.toUpperCase()}
        </span>
      )
    }
  </header>

  <div class="service-content">
    <p class="service-description">
      {service.description}
    </p>

    {
      service.featureHighlights && service.featureHighlights.length > 0 && (
        <div class="feature-highlights">
          <h4 class="features-title">[ HIGHLIGHTS ]</h4>
          <ul class="features-list" role="list">
            {service.featureHighlights.slice(0, 3).map((feature) => (
              <li class="feature-item">▸ {feature}</li>
            ))}
            {service.featureHighlights.length > 3 && (
              <li class="feature-more">
                + {service.featureHighlights.length - 3} more
              </li>
            )}
          </ul>
        </div>
      )
    }

    {
      (lowestPrice || highestPrice) && (
        <div class="pricing-preview">
          <span class="pricing-label">FROM</span>
          <span class="price-range">
            {lowestPrice && `$${lowestPrice.toLocaleString()}`}
            {lowestPrice &&
              highestPrice &&
              lowestPrice !== highestPrice &&
              ` - $${highestPrice.toLocaleString()}`}
          </span>
        </div>
      )
    }
  </div>

  <footer class="service-footer">
    <a
      href={`/services/${service.slug}`}
      class="service-link"
      aria-label={`View details for ${service.title}`}
    >
      <span class="link-text">LEARN MORE</span>
      <span class="link-arrow">→</span>
    </a>
  </footer>
</article>

<style>
  .service-card {
    background: var(--glass-bg-secondary);
    backdrop-filter: blur(var(--glass-blur-card));
    border: 1px solid var(--glass-border-light);
    border-radius: var(--glass-radius-lg);
    padding: 2rem;
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    min-height: 300px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .service-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    border-color: var(--accent-primary);
  }

  .service-card:focus-within {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
  }

  /* Punk-style misalignment */
  .misalign-left {
    transform: rotate(-1deg);
    margin-left: -8px;
  }

  .misalign-right {
    transform: rotate(1deg);
    margin-right: -8px;
  }

  .misalign-left:hover {
    transform: rotate(-1deg) translateY(-4px);
  }

  .misalign-right:hover {
    transform: rotate(1deg) translateY(-4px);
  }

  /* Pinned/Featured styling */
  .pinned {
    border-color: var(--accent-primary);
    box-shadow: 0 0 20px rgba(var(--accent-primary-rgb), 0.2);
  }

  .pin-indicator {
    position: absolute;
    top: -1px;
    right: -1px;
    background: var(--accent-primary);
    color: var(--text-on-accent);
    padding: 0.5rem 1rem;
    font-size: 0.75rem;
    font-weight: 700;
    letter-spacing: 0.05em;
    border-radius: 0 var(--glass-radius-lg) 0 var(--glass-radius-md);
  }

  .service-header {
    margin-bottom: 1.5rem;
  }

  .service-title {
    font-size: clamp(1.25rem, 2.5vw, 1.5rem);
    font-weight: 700;
    color: var(--text-primary);
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  .service-category {
    font-size: 0.875rem;
    color: var(--accent-primary);
    font-weight: 600;
    letter-spacing: 0.05em;
  }

  .service-content {
    flex: 1;
    margin-bottom: 1.5rem;
  }

  .service-description {
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .feature-highlights {
    margin-bottom: 1.5rem;
  }

  .features-title {
    font-size: 0.875rem;
    font-weight: 700;
    color: var(--accent-primary);
    margin: 0 0 0.75rem 0;
    letter-spacing: 0.05em;
  }

  .features-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .feature-item {
    color: var(--text-secondary);
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .feature-more {
    color: var(--accent-primary);
    font-size: 0.875rem;
    font-weight: 600;
    margin-top: 0.25rem;
  }

  .pricing-preview {
    background: var(--glass-bg-tertiary);
    border: 1px solid var(--glass-border-light);
    border-radius: var(--glass-radius-md);
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .pricing-label {
    font-size: 0.75rem;
    color: var(--text-secondary);
    font-weight: 600;
    letter-spacing: 0.1em;
    margin-bottom: 0.25rem;
  }

  .price-range {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--accent-primary);
  }

  .service-footer {
    margin-top: auto;
  }

  .service-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--accent-primary);
    text-decoration: none;
    font-weight: 700;
    font-size: 0.875rem;
    letter-spacing: 0.05em;
    transition: all 0.2s ease;
    padding: 0.75rem 0;
  }

  .service-link:hover {
    color: var(--accent-secondary);
    transform: translateX(4px);
  }

  .service-link:focus {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
  }

  .link-arrow {
    transition: transform 0.2s ease;
  }

  .service-link:hover .link-arrow {
    transform: translateX(4px);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .service-card {
      padding: 1.5rem;
      min-height: 280px;
    }

    .misalign-left,
    .misalign-right {
      transform: none;
      margin: 0;
    }

    .misalign-left:hover,
    .misalign-right:hover {
      transform: translateY(-4px);
    }
  }

  /* Dark mode adjustments */
  [data-theme='dark'] .service-card {
    background: var(--glass-bg-secondary);
    border-color: var(--glass-border-dark);
  }

  [data-theme='dark'] .service-card:hover {
    border-color: var(--accent-primary);
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .service-card {
      border-width: 2px;
    }

    .service-title {
      font-weight: 800;
    }
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .service-card {
      transition: none;
    }

    .service-card:hover {
      transform: none;
    }

    .misalign-left,
    .misalign-right {
      transform: none;
    }

    .service-link:hover {
      transform: none;
    }

    .service-link:hover .link-arrow {
      transform: none;
    }
  }
</style>

