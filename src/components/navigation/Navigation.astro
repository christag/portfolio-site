---
// Navigation.astro - Theme-aware responsive navigation
export interface Props {
  currentPath?: string;
}

const { currentPath = '/' } = Astro.props;
---

<!-- Theme-aware responsive navigation - CLEAN GLASSMORPHISM -->
<nav id="main-nav" class="nav-glassmorphism">
  <div class="nav-inner">
    <div class="nav-content">
      <!-- Logo/Name -->
      <div>
        <a href="/" class="nav-logo" id="nav-logo"> christopher tagliaferro </a>
      </div>

      <!-- Desktop navigation -->
      <div class="nav-desktop gap-4">
        <a href="/" class="nav-link">About</a>
        <a href="/services" class="nav-link">Services</a>
        <a href="/portfolio" class="nav-link">Portfolio</a>
        <a
          href="https://booking.christagliaferro.com"
          target="_blank"
          rel="noopener noreferrer"
          class="nav-link">Contact</a
        >

        <!-- Theme toggle - styled like nav links -->
        <button id="theme-toggle" class="nav-link theme-button"> Light </button>
      </div>

      <!-- Mobile menu button -->
      <button
        id="mobile-menu-toggle"
        class="mobile-toggle"
        aria-label="Toggle mobile menu"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile menu with glassmorphism -->
    <div id="mobile-menu" class="mobile-menu hidden">
      <div class="mobile-menu-content">
        <a href="/" class="mobile-link">About</a>
        <a href="/services" class="mobile-link">Services</a>
        <a href="/portfolio" class="mobile-link">Portfolio</a>
        <a
          href="https://booking.christagliaferro.com"
          target="_blank"
          rel="noopener noreferrer"
          class="mobile-link">Contact</a
        >

        <!-- Mobile theme toggle -->
        <button
          id="mobile-theme-toggle"
          class="mobile-link mobile-theme-button"
        >
          Theme: Light
        </button>
      </div>
    </div>
  </div>
</nav>

<style>
  /* Beautiful Glassmorphism Navigation - CLEAN IMPLEMENTATION */
  .nav-glassmorphism {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    z-index: 9999;

    /* Beautiful glassmorphism for light theme */
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border-bottom: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  }

  /* Dark theme glassmorphism - TRUE TRANSPARENT GLASS */
  html[data-theme='dark'] nav#main-nav.nav-glassmorphism {
    /* TRUE transparent glass - background shows through */
    background: rgba(0, 0, 0, 0.15) !important;
    backdrop-filter: blur(20px) saturate(180%) !important;
    -webkit-backdrop-filter: blur(20px) saturate(180%) !important;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1) !important;
    box-shadow: 0 2px 16px rgba(0, 0, 0, 0.5) !important;
  }

  /* Inner container for proper spacing */
  .nav-inner {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .nav-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    min-height: 64px;
    /* MOBILE FIX: Reduce height on mobile */
  }

  /* Mobile-specific height reduction */
  @media (max-width: 767px) {
    .nav-content {
      padding: 0.75rem 0;
      min-height: 56px;
    }

    .nav-inner {
      padding: 0 1rem; /* Reduce horizontal padding on mobile */
    }

    .nav-logo {
      font-size: 1.125rem; /* Slightly smaller on mobile */
    }
  }

  /* Logo Styles */
  .nav-logo {
    font-size: 1.25rem;
    font-weight: 700;
    text-decoration: none;
    color: var(--color-text-primary);
    font-family: var(--font-heading);
    transition: opacity 0.3s ease;
  }

  .nav-logo:hover {
    opacity: 0.8;
  }

  /* Desktop Navigation */
  .nav-desktop {
    display: none;
    align-items: center;
  }

  @media (min-width: 768px) {
    .nav-desktop {
      display: flex;
    }
  }

  /* Navigation Links with Glassmorphism Hover */
  .nav-link {
    font-weight: 500;
    text-decoration: none;
    color: var(--color-text-primary);
    font-family: var(--font-body);
    padding: 0.5rem 1rem;
    border-radius: 12px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .nav-link:hover {
    background: rgba(184, 134, 154, 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    color: var(--color-accent-primary);
  }

  /* Theme button styling - VISIBLE IN BOTH MODES */
  .theme-button {
    /* Light mode: Use darker colors for visibility against light background */
    background: rgba(0, 0, 0, 0.05);
    border: 1px solid rgba(0, 0, 0, 0.15);
    cursor: pointer;
    font-size: inherit;
    border-radius: 12px;
    padding: 0.5rem 1rem;
    font-weight: 500;
    color: var(--color-text-primary);
  }

  [data-theme='dark'] .theme-button {
    /* Dark mode: Use light colors for visibility against dark background */
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.1);
  }

  .theme-button:hover {
    background: rgba(184, 134, 154, 0.2);
    border-color: var(--color-accent-primary);
  }

  /* Mobile Toggle */
  .mobile-toggle {
    display: block;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 0.5rem;
    cursor: pointer;
    color: var(--color-text-primary);
    transition: all 0.3s ease;
  }

  .mobile-toggle:hover {
    background: rgba(184, 134, 154, 0.1);
    border-color: var(--color-accent-primary);
  }

  .mobile-toggle svg {
    width: 1.5rem;
    height: 1.5rem;
    stroke: currentColor;
  }

  @media (min-width: 768px) {
    .mobile-toggle {
      display: none;
    }
  }

  /* Mobile Menu - Beautiful Glassmorphism with proper dark mode */
  .mobile-menu {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border-top: 1px solid rgba(255, 255, 255, 0.2);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    margin: 0.5rem 1rem;
    border-radius: 16px;
    overflow: hidden;
    /* MOBILE FIX: Ensure proper containment and remove conflicting borders */
    border-left: none;
    border-right: none;
    max-width: calc(100vw - 2rem);
    /* Improve touch interactions */
    touch-action: manipulation;
  }

  /* Dark theme mobile menu - TRUE TRANSPARENT GLASS */
  html[data-theme='dark'] .mobile-menu {
    /* TRANSPARENT glass with better text readability */
    background: rgba(0, 0, 0, 0.25) !important;
    backdrop-filter: blur(20px) saturate(180%) !important;
    -webkit-backdrop-filter: blur(20px) saturate(180%) !important;
    border: 1px solid rgba(255, 255, 255, 0.15) !important;
    box-shadow: 0 2px 16px rgba(0, 0, 0, 0.6) !important;
    /* MOBILE FIX: Remove any additional borders that cause grey appearance */
    border-left: none !important;
    border-right: none !important;
  }

  .mobile-menu-content {
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .mobile-link {
    display: block;
    padding: 0.875rem 1rem;
    font-weight: 500;
    text-decoration: none;
    color: var(--color-text-primary);
    font-family: var(--font-body);
    border-radius: 12px;
    transition: all 0.3s ease;
    background: none;
    border: none;
    text-align: left;
    width: 100%;
    cursor: pointer;
    margin: 0.125rem 0;
    position: relative;
  }

  /* Ensure text is visible in dark mode - soft white instead of pure white */
  [data-theme='dark'] .mobile-link {
    color: #f5f5f0 !important;
  }

  .mobile-link:hover {
    background: rgba(184, 134, 154, 0.1);
    color: var(--color-accent-primary);
  }

  [data-theme='dark'] .mobile-link:hover {
    background: rgba(184, 134, 154, 0.15);
  }

  /* Menu separators - make them more visible */
  .mobile-link:not(:last-child)::after {
    content: '';
    position: absolute;
    bottom: -0.125rem;
    left: 1rem;
    right: 1rem;
    height: 1px;
    background: rgba(0, 0, 0, 0.1);
  }

  [data-theme='dark'] .mobile-link:not(:last-child)::after {
    background: rgba(255, 255, 255, 0.1);
  }

  .mobile-theme-button {
    font-size: inherit;
    font-weight: 500;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 0.25rem;
    color: var(--color-text-primary);
  }

  [data-theme='dark'] .mobile-theme-button {
    background: rgba(255, 255, 255, 0.1) !important;
    border-color: rgba(255, 255, 255, 0.2) !important;
    color: #f5f5f0 !important;
  }

  /* Utility */
  .hidden {
    display: none;
  }
</style>

<script>
  // Theme management with glass material support
  const themeToggle = document.getElementById('theme-toggle');
  const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const nav = document.getElementById('main-nav');

  // Initialize theme from localStorage or default to light
  let currentTheme = localStorage.getItem('theme') || 'light';

  function updateTheme(theme: string) {
    // Ensure theme is valid (only light or dark)
    if (theme !== 'light' && theme !== 'dark') {
      theme = 'light';
    }

    currentTheme = theme;
    localStorage.setItem('theme', theme);

    // Update document attribute for CSS variables
    if (theme === 'light') {
      document.documentElement.removeAttribute('data-theme');
    } else {
      document.documentElement.setAttribute('data-theme', theme);
    }

    // Update button text - Show what mode we're switching TO
    const themeNames: { [key: string]: string } = {
      light: 'Dark', // Show what it will switch TO
      dark: 'Light', // Show what it will switch TO
    };
    if (themeToggle) themeToggle.textContent = themeNames[theme];
    if (mobileThemeToggle)
      mobileThemeToggle.textContent = `Theme: ${themeNames[theme]}`;
  }

  function cycleTheme() {
    // Only cycle between light and dark
    const themes = ['light', 'dark'];
    const currentIndex = themes.indexOf(currentTheme);
    const nextIndex = (currentIndex + 1) % themes.length;
    updateTheme(themes[nextIndex]);
  }

  // Initialize theme on page load
  document.addEventListener('DOMContentLoaded', () => {
    updateTheme(currentTheme);

    // Add scroll effect for enhanced glass
    window.addEventListener('scroll', () => {
      if (nav) {
        if (window.scrollY > 50) {
          nav.classList.add('scrolled');
        } else {
          nav.classList.remove('scrolled');
        }
      }
    });
  });

  // Theme toggle event listeners
  themeToggle?.addEventListener('click', cycleTheme);
  mobileThemeToggle?.addEventListener('click', cycleTheme);

  // Mobile menu toggle
  mobileMenuToggle?.addEventListener('click', () => {
    if (mobileMenu) {
      mobileMenu.classList.toggle('hidden');
    }
  });

  // Close mobile menu when clicking on links
  const mobileLinks = document.querySelectorAll('#mobile-menu a');
  mobileLinks.forEach((link) => {
    link.addEventListener('click', () => {
      if (mobileMenu) {
        mobileMenu.classList.add('hidden');
      }
    });
  });

  // Close mobile menu when window is resized to desktop size
  let resizeTimer: NodeJS.Timeout;
  window.addEventListener('resize', () => {
    // Close immediately when resizing to desktop size
    if (
      window.innerWidth >= 768 &&
      mobileMenu &&
      !mobileMenu.classList.contains('hidden')
    ) {
      mobileMenu.classList.add('hidden');
    }

    // Optional: Clear any pending timers
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(() => {
      // Additional cleanup if needed
    }, 100);
  });
</script>
